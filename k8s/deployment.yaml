apiVersion: apps/v1
kind: Deployment
metadata:
  name: mussubotti
  namespace: mussubot
  labels:
    app: mussubotti
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mussubotti
  template:
    metadata:
      labels:
        app: mussubotti
    spec:
      containers:
      - name: mussubotti
        image: ${IMAGE_REPO}:${IMAGE_TAG}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          runAsUser: 10000
          capabilities:
            drop: [ALL]
        envFrom:
        - secretRef:
            name: mussubotti-secrets
        - configMapRef:
            name: mussubotti-config
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep mussubotti | grep -v grep
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep mussubotti | grep -v grep
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: work-hours
  namespace: mussubot
  labels:
    app: work-hours
spec:
  replicas: 1
  selector:
    matchLabels:
      app: work-hours
  template:
    metadata:
      labels:
        app: work-hours
    spec:
      containers:
      - name: work-hours
        image: ${IMAGE_REPO}:${IMAGE_TAG}
        command: ["/bin/sh", "-c"]
        args: ["./work_hours"]
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          runAsUser: 10000
          capabilities:
            drop: [ALL]
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - secretRef:
            name: mussubotti-secrets
        - configMapRef:
            name: mussubotti-config
        resources:
          limits:
            memory: "256Mi"
            cpu: "300m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: work-hours
  namespace: mussubot
spec:
  selector:
    app: work-hours
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: work-hours-ingress
  namespace: mussubot
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - ${WORK_HOURS_DOMAIN}
    secretName: work-hours-tls
  rules:
  - host: ${WORK_HOURS_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: work-hours
            port:
              name: http 